///////////////////////////////////////////////////////////////////////////////
//
//    MODULE: db-utils 
//    Utilities for reading database files in runtime folder
//


const fs = require("fs");
const { response } = require("express");


/*
    Return array of databases in the runtime folder
    Returns only files with a .loki extension
    and strips the extension from the filename. 
*/
function GetDatabaseNamesArray() {
  let files = fs.readdirSync("netcreate-itest/runtime/");
  let dbs = [];
  files.forEach((file) => {
    if (file.endsWith(".loki")) {
      dbs.push(file.replace(".loki", ""));
    }
  });
  return dbs;
}

/*
    Dynamically generate netcreate-config.js file.
    Used by:
    * nc-multiplex.js when serving /graph/:graph/netcreate-config.js
    * brunch-server.js and brunch-config.js when starting up.
*/
function GetNCConfig(data) {
  const { db, port, netport, ip, googlea } = data;
  const netportDef = netport ? `\n  netport: "${netport}",` : "";
  const ipDef = ip ? `\n  ip: "${ip}",` : "";
  return `
// this file dynamically auto-generated by "nc-multiplex.js"
const NC_CONFIG = {
  dataset: "${db}",
  port: "${port}",${netportDef}${ipDef}
  googlea: "${googlea}"
};
if (typeof process === "object") module.exports = NC_CONFIG;
if (typeof window === "object") window.NC_CONFIG = NC_CONFIG;
`;
}

module.exports = {
  GetDatabaseNamesArray, GetNCConfig
}